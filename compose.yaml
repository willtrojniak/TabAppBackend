services:
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/certs:/etc/nginx/certs
    depends_on:
      - api
    extra_hosts:
      - host.docker.internal:host-gateway
  api:
    build:
      context: .
      args:
        ENV: ${ENV:-dev}
    depends_on:
      - db
      - redis
    restart: always
    ports:
      - "3000:3000"
    environment:
      - ENV_DIR=/run/secrets
    secrets:
      - base.env
      - dev.env
      - prod.env
  db:
    image: postgres:12.19-alpine3.20
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_user
      - postgres_password
  redis:
    image: redis:alpine3.20

  adminer:
    profiles:
      - debug
    depends_on:
      - db
    image: adminer
    restart: always
    ports:
      - "8080:8080"
  swagger:
    profiles:
      - swagger 
    image: swaggerapi/swagger-ui:latest
    ports:
      - "4200:8080"
    volumes:
      - "./:/src"
    environment:
      SWAGGER_JSON: "/src/api.yaml"
  redisinsight:
    profiles:
      - debug
    depends_on:
      - redis
    image: redislabs/redisinsight
    ports:
      - "5540:5540"
    

secrets:
  base.env:
    file: ./base.env
  dev.env:
    file: ./dev.env
  prod.env:
    file: ./prod.env
  postgres_user:
    file: ./postgres_user.secret
  postgres_password:
    file: ./postgres_password.secret

volumes:
  pgdata:
